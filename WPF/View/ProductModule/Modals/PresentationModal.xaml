<UserControl x:Class="WPF.View.ProductModule.PresentationModal"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:custom="clr-namespace:WPF.ViewsComponent.CustomControls"
			 mc:Ignorable="d">
	<Grid Width="440">
		<custom:Popup TitleBar="{Binding titleBar}"
					  IconBar="/Resource/Image/presentation.png"
					  ExitCommand="{Binding closeCommand}">

			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="5" />
					<RowDefinition Height="auto" />
					<RowDefinition Height="12" />
					<RowDefinition Height="auto" />
					<RowDefinition Height="5" />
				</Grid.RowDefinitions>

				<GroupBox Grid.Row="1"
						  Header="Presentación"
						  Style="{DynamicResource GroupBoxStyle}">
					<Grid Margin="5">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="auto" />
							<ColumnDefinition Width="20" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition />
							<RowDefinition Height="20" />
							<RowDefinition />
						</Grid.RowDefinitions>

						<StackPanel Grid.Column="0"
									Margin="5 0 0 0">
							<TextBlock Text="Código"
									   Style="{DynamicResource TextBlockStyle}" />
							<TextBox Text="{Binding id}"
									 FontSize="17"
									 TextAlignment="Center"
									 IsEnabled="False"
									 Background="Transparent" />
						</StackPanel>

						<StackPanel Grid.Column="2"
									Margin="0 0 5 0">
							<TextBlock Text="Nombre"
									   Style="{DynamicResource TextBlockStyle}" />

							<TextBox Text="{Binding name, UpdateSourceTrigger=PropertyChanged}"
									 FontSize="17"
									 FontWeight="Normal"
									 Style="{DynamicResource TextBoxStyle}"
									 TextAlignment="Center" />
						</StackPanel>

						<StackPanel Grid.Row="2"
									Grid.Column="0"
									Grid.ColumnSpan="3"
									Orientation="Horizontal"
									HorizontalAlignment="Center">

							<Button Content="Guardar"
									FontWeight="Normal"
									IsEnabled="{Binding canCreate}"
									Command="{Binding saveCommand}"
									CommandParameter="{Binding isEditable}"
									Style="{DynamicResource CustomButtonStyle}"
									Foreground="White"
									Width="75" />

							<Button Margin="30 0 0 0"
									Content="Limpiar"
									FontWeight="Normal"
									Command="{Binding resetCommand}"
									Style="{DynamicResource CustomButtonStyle}"
									Foreground="White"
									Width="75"
									Visibility="{Binding isEditable, Converter={StaticResource BooleanToVisibilityConverter}}" />

							<Button Margin="30 0 0 0"
									Content="Eliminar"
									Command="{Binding deleteCommand}"
									Background="#F44336"
									Style="{DynamicResource DeleteButtonStyle}"
									Visibility="{Binding isEditable, Converter={StaticResource BooleanToVisibilityConverter}}" />

						</StackPanel>

					</Grid>
				</GroupBox>

				<GroupBox Grid.Row="3"
						  Header="Lista de presentación"
						  Style="{DynamicResource GroupBoxStyle}">
					<Grid Grid.Row="0"
						  Grid.Column="0">
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="auto" />
						</Grid.RowDefinitions>

						<StackPanel Grid.Row="0"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									DataContext="{Binding listingViewModel}">
							<custom:LoadingSpinner Diameter="60"
												   IsLoading="{Binding isLoading}"
												   Thickness="5"
												   Color="Black" />
							<TextBlock Text="{Binding errorMessage}"
									   Foreground="DarkRed"
									   FontSize="18"
									   Visibility="{Binding hasErrorMessage, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</StackPanel>

						<DataGrid Grid.Row="0"
								  ItemsSource="{Binding listingViewModel.listing}"
								  Visibility="{Binding listingViewModel.isListingVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
								  Style="{DynamicResource ElementsDataGrid}"
								  Margin="5 10 5 5"
								  Height="135"
								  Width="380">
							<DataGrid.Resources>
								<DataTemplate x:Key="optionsCell">
									<StackPanel HorizontalAlignment="Center"
												Orientation="Horizontal">
										<Button Content="Editar"
												Command="{Binding Path=DataContext.editCommand,RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
												CommandParameter="{Binding}"
												Style="{DynamicResource ButtonStyle}"
												Background="#2196F3"
												Margin="0 0 5 0" />
										<RibbonCheckBox Command="{Binding Path=DataContext.changeStatusCommand,RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
														CommandParameter="{Binding}"
														Style="{DynamicResource StatusCheckBoxDataGridStyle}" />
									</StackPanel>
								</DataTemplate>
							</DataGrid.Resources>
							<DataGrid.Columns>
								<DataGridTextColumn Header="Cód."
													Width="auto"
													Binding="{Binding IdPresentation}" />
								<DataGridTextColumn Header="Nombre"
													Width="150"
													Binding="{Binding Name}" />
								<DataGridTemplateColumn Header="Opciones"
														Width="*"
														CellTemplate="{StaticResource optionsCell}" />
							</DataGrid.Columns>
						</DataGrid>

						<WrapPanel Grid.Row="1"
								   Margin="5 0"
								   VerticalAlignment="Center"
								   HorizontalAlignment="Right"
								   DataContext="{Binding listingViewModel}"
								   Visibility="{Binding isListingVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
							<TextBlock Style="{DynamicResource TextBlockStyle}"
									   FontSize="14"
									   Text="{Binding listing.Count}" />
							<TextBlock Style="{DynamicResource TextBlockStyle}"
									   FontSize="14"
									   Text=" elementos" />
						</WrapPanel>
					</Grid>
				</GroupBox>

			</Grid>

		</custom:Popup>

	</Grid>
	<UserControl.Resources>
		<Style x:Key="GroupBoxStyle"
			   TargetType="GroupBox">
			<Setter Property="FontSize"
					Value="16.5" />
			<Setter Property="BorderBrush"
					Value="Black" />
			<Setter Property="FontWeight"
					Value="SemiBold" />
		</Style>
		<Style x:Key="TextBlockStyle"
			   TargetType="TextBlock">
			<Setter Property="FontSize"
					Value="17" />
			<Setter Property="Foreground"
					Value="Black" />
			<Setter Property="FontWeight"
					Value="Normal" />
		</Style>
		<Style x:Key="ButtonStyle"
			   TargetType="Button">
			<Setter Property="FontSize"
					Value="15" />
			<Setter Property="Foreground"
					Value="White" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">

						<Border x:Name="border"
								Background="{TemplateBinding Background}"
								CornerRadius="4"
								Padding="8 0 8 0"
								BorderBrush="white"
								BorderThickness="0.6"
								SnapsToDevicePixels="true">
							<ContentControl Content="{TemplateBinding Content}" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver"
									 Value="true">
								<Setter Property="Background"
										TargetName="border"
										Value="white" />
								<Setter Property="BorderBrush"
										TargetName="border"
										Value="black" />
								<Setter Property="Foreground"
										Value="Black" />
							</Trigger>
							<Trigger Property="IsPressed"
									 Value="true">
								<Setter Property="Background"
										TargetName="border"
										Value="White" />
								<Setter Property="BorderBrush"
										TargetName="border"
										Value="Black" />
							</Trigger>
						</ControlTemplate.Triggers>

					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</UserControl.Resources>
</UserControl>
